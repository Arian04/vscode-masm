;Write a program that contains two instructions: (1) add the number 5 to the EAX register, and (2) add 5 to the EDX register.
;Generate a listing file and examine the machine code generated by the assembler. Copy the listing file to your document.
;What differences, if any, did you find between the two instructions? (30 points)

.386
.model flat,stdcall
.stack 4096
;ExitProcess proto, dwExitCode:dword

.code
main PROC
    ; As the instructions said, I compared EAX and EDX, but I was like wait why is EAX 0x83C005 and EDX 0x83C205 (I'm talking about the C0 -> C2 difference
    ; in the middle of the hex values). Since that means there is a +2 difference between A and D, which confuses me so much.
    add eax, 591

    ; So then I added these extra instructions to see what the associated values are used for EBX and ECX, which were:
    ;add ebx, 5 ; 0x83C305 (important difference: C3)
    ;add ecx, 5 ; 0x83C105 (important difference: C1)
    
    ; In summary:
    ; EAX -> C0
    ; EBX -> C3
    ; ECX -> C1
    ; EDX -> C2
    ; So basically, the conclusion I have come to is that whoever mapped these registers to their hex values did not know the order of the alphabet
    ;INVOKE ExitProcess,0
    xor eax, eax
    ret
main ENDP

END main